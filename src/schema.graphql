# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Answer {
  answer: String!
  isCorrect: Boolean!
  question: Question!
  questionId: Int!
  user: User!
  userId: Int!
}

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateAnswerInput {
  questionId: Int!
  userAnswer: String!
}

input CreateFileUploadInput {
  fileUpload: Upload!
  locationSlug: String
}

input CreateQuestionInput {
  correctAnswer: String!
  docFile: Upload!
  question: String!
  starsAmount: Int!
  topicId: Int!
}

input CreateRewardInput {
  name: String!
  starsCost: Int!
}

input CreateTopicInput {
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  password: String!
  username: String!
}

type MediaFile {
  bucket: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime
  id: ID!
  metadataUrl: String
  mimetype: String
  name: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime
  url: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  claimReward(rewardIdArgs: RewardIdArgs!): Reward!
  createAnswer(createAnswerInput: CreateAnswerInput!): Answer!
  createQuestion(createQuestionInput: CreateQuestionInput!): Question!
  createReward(createRewardInput: CreateRewardInput!): Reward!
  createTopic(createTopicInput: CreateTopicInput!): Topic!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
  uploadMedia(createFileUploadInput: CreateFileUploadInput!): MediaFile!
}

type Query {
  answers: [Answer!]!
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  questions: [Question!]!
  rewards: [Reward!]!
  topics: [Topic!]!
  userAnswers(questionId: Int, userId: Int!): [Answer!]!
  userQuestions: [Question!]!
  userRewards(userId: Int!): [Reward!]!
  userTopics(userId: Int!): [Topic!]!
}

type Question {
  correctAnswer: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime
  doc: MediaFile!
  id: ID!
  question: String!
  starsAmount: Int!
  topic: Topic!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime
}

type Reward {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime
  id: ID!
  name: String!
  starsCost: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime
}

input RewardIdArgs {
  rewardId: Int!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  password: String!
  username: String!
}

type Subscription {
  userUpdated: User!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

type Topic {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime
  id: ID!
  name: String!
  questions: [Question!]!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime
}

input UpdateUserInput {
  stars: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime
  id: ID!
  role: Role!
  stars: Int!
  topics: [Topic!]!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime
  username: String!
}